#!/usr/bin/env php
<?php
    $iniFile        = __DIR__."/../app/config.ini";
    $migrationsDir  = __DIR__."/migrations";

    require_once(__DIR__.'/../vendor/cliColors/CliColors.php');
    $colors = new Colors();

    $config = parse_ini_file($iniFile);

    // Conect to DB
    $dbHost = $config['db_host'];
    if ($config['db_port']) {
        $dbHost .= $dbHost.':'.$config['db_port'];
    }
    $dbName = $config['db_name'];
    $dbUser = $config['db_user'];
    $dbPassword = $config['db_password'];

    $dbLink = new mysqli('p:'.$dbHost, $dbUser, $dbPassword, $dbName);
    if ($dbLink->connect_error) {
        // oops....
        die("Could not connect to database.");
    } else {
        if ($config['db_character_set']) {
            $dbLink->query("set names '".$config['db_character_set']."'");
        }
        $dbLink->autocommit(true);
    }
    $version = 0;
    $result = $dbLink->query("select version from schema_info");
    if ($result) {
        $row = $result->fetch_array(MYSQLI_NUM);
        $version = $row[0];
    } else {
        $dbLink->query("CREATE TABLE `schema_info` (`version` int unsigned DEFAULT '0') ENGINE=InnoDB");
        $dbLink->query("INSERT INTO schema_info (version) VALUES (0)");
    }
    echo PHP_EOL.$colors->getColoredString('Current Version: ','light_gray').$colors->getColoredString($version, 'white').PHP_EOL;
    // Read migrations
    $migrationsCount = 0;
    if (false !== ($files = scandir($migrationsDir))) {
        foreach ($files as $file) {
            if (preg_match('/^(\d+)_(.*)\.sql/', $file, $matches)) {
                if ($matches[1] <= $version) continue;
                echo $colors->getColoredString('Applying migration '.$matches[1].' "', 'light_gray')
                    .$colors->getColoredString($matches[2], 'white').$colors->getColoredString('"', 'light_gray');
                // apply migration
                $sql = file_get_contents($migrationsDir.'/'.$file, 1);
                if ($sql) {
                    $query_array = explode(';', $sql);
                    $sql = $sql;
                    // Run the SQL
                    $i = 0;
                    if ($dbLink->multi_query($sql)) {
                        do {
                            $dbLink->next_result();
                            $i++;
                        } while( $dbLink->more_results() );
                    }

                    if ($dbLink->errno) {
                        die(
                            $colors->getColoredString('   ✗', 'red')
                           .PHP_EOL.PHP_EOL.$colors->getColoredString('Error:', 'red')
                           .$colors->getColoredString(' Query #' . ( $i + 1 ) . ' of ', 'light_red').$colors->getColoredString($file, 'red').PHP_EOL.PHP_EOL
                           .$colors->getColoredString($query_array[$i], 'light_gray') .PHP_EOL.PHP_EOL
                           .'' . $colors->getColoredString($dbLink->error, 'light_red') . PHP_EOL.PHP_EOL
                        );
                    }
                }
                $migrationsCount++;
                echo $colors->getColoredString('   ✓', 'green').PHP_EOL;
            }
        }
        $message = $migrationsCount ? "$migrationsCount migrations successfully applied" : "Database is up-to-date";
        echo $colors->getColoredString($message, 'light_green').PHP_EOL.PHP_EOL;
    } else die("Could not open migrations dir");
